{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 4,
    "pending": 0,
    "failures": 2,
    "start": "2025-05-30T05:00:08.841Z",
    "end": "2025-05-30T05:00:08.858Z",
    "duration": 17,
    "testsRegistered": 6,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "63e20899-a875-44b8-b88f-e1531715746d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6815cec1-7334-4e5f-a8a5-6cfbe2fec927",
          "title": "circle test",
          "fullFile": "/workspaces/unit-test/test/env_test.js",
          "file": "/test/env_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should calculate circle area",
              "fullTitle": "circle test should calculate circle area",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = calculateCircleArea(5)  \nassert.strictEqual(result, 78.539816339744830961566084581988.toFixed(3) , 'Did not pass the test')",
              "err": {},
              "uuid": "c08c4126-b091-4693-8e39-548c17f58d6a",
              "parentUUID": "6815cec1-7334-4e5f-a8a5-6cfbe2fec927",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c08c4126-b091-4693-8e39-548c17f58d6a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b64687a2-1039-49df-8baa-80e5ed351022",
          "title": "fuel energy selector tests",
          "fullFile": "/workspaces/unit-test/test/env_test.js",
          "file": "/test/env_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct values for diesel",
              "fullTitle": "fuel energy selector tests should return correct values for diesel",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedDieselInfo = {\n  fuel_price: 11795,\n  fuel_energy: 40.7,\n  emision_factor: 74.01\n};\nassert.deepStrictEqual(fuelEnergySelector('Diesel'), expectedDieselInfo);",
              "err": {},
              "uuid": "c7234df7-5a50-45ac-8f7b-a6e82cffc542",
              "parentUUID": "b64687a2-1039-49df-8baa-80e5ed351022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct values for gasoline",
              "fullTitle": "fuel energy selector tests should return correct values for gasoline",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedGasolineInfo = {\n  fuel_price: 16700,\n  fuel_energy: 35.58,\n  emision_factor: 69.25\n};\nassert.deepStrictEqual(fuelEnergySelector('Gasoline'), expectedGasolineInfo);",
              "err": {},
              "uuid": "233fabfa-5ee4-44f1-9313-d86b7a0d14e1",
              "parentUUID": "b64687a2-1039-49df-8baa-80e5ed351022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not return an empty object for gasoline",
              "fullTitle": "fuel energy selector tests should not return an empty object for gasoline",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.notDeepEqual(fuelEnergySelector('Gasoline'), {});",
              "err": {},
              "uuid": "b7545dbd-a390-4cbd-9f68-7cd8459f749e",
              "parentUUID": "b64687a2-1039-49df-8baa-80e5ed351022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct values for LPG",
              "fullTitle": "fuel energy selector tests should return correct values for LPG",
              "timedOut": false,
              "duration": 3,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const expectedLPGInfo = {\n  fuel_price: 9000,\n  fuel_energy: 27.1,\n  emision_factor: 63.1\n};\nassert.deepStrictEqual(fuelEnergySelector('LPG'), expectedLPGInfo);",
              "err": {
                "message": "AssertionError: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ {}\n- {\n-   emision_factor: 63.1,\n-   fuel_energy: 27.1,\n-   fuel_price: 9000\n- }",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly deep-equal:\n+ actual - expected\n\n+ {}\n- {\n-   emision_factor: 63.1,\n-   fuel_energy: 27.1,\n-   fuel_price: 9000\n- }\n    at Context.<anonymous> (test/env_test.js:45:12)\n    at process.processImmediate (node:internal/timers:483:21)",
                "diff": "- {}\n+ {\n+   \"emision_factor\": 63.1\n+   \"fuel_energy\": 27.1\n+   \"fuel_price\": 9000\n+ }\n"
              },
              "uuid": "8879a1ba-f099-406d-89f9-ac8fb0c46c86",
              "parentUUID": "b64687a2-1039-49df-8baa-80e5ed351022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return undefined for unknown fuel type",
              "fullTitle": "fuel energy selector tests should return undefined for unknown fuel type",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual(fuelEnergySelector('UnknownFuel'), undefined);",
              "err": {
                "message": "AssertionError: Expected values to be strictly equal:\n+ actual - expected\n\n+ {}\n- undefined",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ {}\n- undefined\n    at Context.<anonymous> (test/env_test.js:49:12)\n    at process.processImmediate (node:internal/timers:483:21)",
                "diff": null
              },
              "uuid": "1d59e610-ed7c-4160-9d19-fd62ebbfb5b5",
              "parentUUID": "b64687a2-1039-49df-8baa-80e5ed351022",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7234df7-5a50-45ac-8f7b-a6e82cffc542",
            "233fabfa-5ee4-44f1-9313-d86b7a0d14e1",
            "b7545dbd-a390-4cbd-9f68-7cd8459f749e"
          ],
          "failures": [
            "8879a1ba-f099-406d-89f9-ac8fb0c46c86",
            "1d59e610-ed7c-4160-9d19-fd62ebbfb5b5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "api/test-report",
        "reportFilename": "report",
        "overwrite": "true",
        "inline": "true",
        "quiet": "false"
      },
      "version": "6.2.0"
    }
  }
}